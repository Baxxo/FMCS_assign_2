// Charge Battery of Rover
controllable event ChargeBatteryY;
controllable event ChargeBatteryB;

// Movement for Yellow Rover
uncontrollable event uRoverYMoveUp;
uncontrollable event uRoverYMoveDown;
uncontrollable event uRoverYMoveRight;
uncontrollable event uRoverYMoveLeft;

controllable event RoverYMoveUp;
controllable event RoverYMoveDown;
controllable event RoverYMoveRight;
controllable event RoverYMoveLeft;

// Rover Yellow step on an item
controllable event RoverYMineral;
controllable event RoverYLiquid;
controllable event RoverYFlora;
controllable event RoverYFossil;

// Rover Yellow empty items because it is on the lab
controllable event RoverYUnload;

svgfile "plant.svg";

plant ChargeStation1:
    const int positionX = 3;
    const int positionY = 4;

    location: initial;marked;
        edge ChargeBatteryY when (RoverYellow.positionX = positionX and RoverYellow.positionY = positionY);
        edge ChargeBatteryB when (RoverBlue.positionX = positionX and RoverBlue.positionY = positionY);
end


plant ChargeStation2:
    const int positionX = 4;
    const int positionY = 1;

    location: initial;marked;
        edge ChargeBatteryY when (RoverYellow.positionX = positionX and RoverYellow.positionY = positionY);
        edge ChargeBatteryB when (RoverBlue.positionX = positionX and RoverBlue.positionY = positionY);
end

plant RoverYellow:

    disc int[1..6] positionX = 3; // 200 = (3-1) * 100
    disc int[1..4] positionY = 4; // 0 = ((4-1) * 100) + 300
    // 0 = 300 - (300) = 300 - (100 * (4 - 1))
    disc int[0..8] battery = 4;
    disc int[0..3] mineral = 0;
    disc int[0..3] liquid = 0;
    disc int[0..3] flora = 0;
    disc int[0..3] fossil = 0;

    location: initial; marked;
        edge RoverYMoveUp when positionY <= 4 and battery > 0
            do positionY := positionY + 1, battery := battery -1;
        edge RoverYMoveDown when positionY >= 1  and battery > 0
            do positionY := positionY - 1, battery := battery -1;
        edge RoverYMoveRight when positionX <= 6 and battery > 0
            do positionX := positionX + 1, battery := battery -1;
        edge RoverYMoveLeft when positionX >= 1 and battery > 0
            do positionX := positionX - 1, battery := battery -1;

        /*edge ChargeBatteryY do battery := 8;

        edge RoverYMineral when mineral < 3 do mineral := mineral + 1;
        edge RoverYLiquid when liquid < 3 do liquid := liquid + 1;
        edge RoverYFlora when flora < 3 do flora := flora + 1;
        edge RoverYFossil when fossil < 3 do fossil := fossil + 1;

        /*edge RoverYUnload when mineral > 0 or liquid > 0 or flora > 0 or fossil > 0
            do mineral := 0, liquid := 0, flora := 0, fossil := 0;*/

end

svgout id "yellow-cell-1" attr "fill" value if RoverYellow.battery < 1 : "lightgray" else "yellow" end;
svgout id "yellow-cell-2" attr "fill" value if RoverYellow.battery < 2 : "lightgray" else "yellow" end;
svgout id "yellow-cell-3" attr "fill" value if RoverYellow.battery < 3 : "lightgray" else "yellow" end;
svgout id "yellow-cell-4" attr "fill" value if RoverYellow.battery < 4 : "lightgray" else "yellow" end;
svgout id "yellow-cell-5" attr "fill" value if RoverYellow.battery < 5 : "lightgray" else "yellow" end;
svgout id "yellow-cell-6" attr "fill" value if RoverYellow.battery < 6 : "lightgray" else "yellow" end;
svgout id "yellow-cell-7" attr "fill" value if RoverYellow.battery < 7 : "lightgray" else "yellow" end;
svgout id "yellow-cell-8" attr "fill" value if RoverYellow.battery < 8 : "lightgray" else "yellow" end;
svgout id "yellow_rover" attr "x" value (RoverYellow.positionX - 1) * 100;
svgout id "yellow_rover" attr "y" value 300 - ((RoverYellow.positionY - 1) * 100);


// Movement for Blue Rover
uncontrollable event uRoverBMoveUp;
uncontrollable event uRoverBMoveDown;
uncontrollable event uRoverBMoveRight;
uncontrollable event uRoverBMoveLeft;

controllable event RoverBMoveUp;
controllable event RoverBMoveDown;
controllable event RoverBMoveRight;
controllable event RoverBMoveLeft;

// Rover Blue step on an item
controllable event RoverBMineral;
controllable event RoverBLiquid;
controllable event RoverBFlora;
controllable event RoverBFossil;

// Rover Blue empty items because it is on the lab
controllable event RoverBUnload;

plant RoverBlue:

    disc int[1..6] positionX = 4; // 300 = (4-1) * 100 = 3 * 100
    disc int[1..4] positionY = 1; // 300 = ((1-1) * 100) + 300
    // 300 = 300 - (0) = 300 - (100 * (1 - 1))
    disc int[0..8] battery = 2;
    disc int[0..3] mineral = 0;
    disc int[0..3] liquid = 0;
    disc int[0..3] flora = 0;
    disc int[0..3] fossil = 0;

    location: initial; marked;
        edge RoverBMoveUp when positionY <= 4 and battery > 0
            do positionY := positionY + 1, battery := battery -1;
        edge RoverBMoveDown when positionY >= 1  and battery > 0
            do positionY := positionY - 1, battery := battery -1;
        edge RoverBMoveRight when positionX <= 6 and battery > 0
            do positionX := positionX + 1, battery := battery -1;
        edge RoverBMoveLeft when positionX >= 1 and battery > 0
            do positionX := positionX - 1, battery := battery -1;

        /*edge ChargeBatteryB do battery := 8;

        edge RoverBMineral when mineral < 3 do mineral := mineral + 1;
        edge RoverBLiquid when liquid < 3 do liquid := liquid + 1;
        edge RoverBFlora when flora < 3 do flora := flora + 1;
        edge RoverBFossil when fossil < 3 do fossil := fossil + 1;

        /*edge RoverBUnload when mineral > 0 or liquid > 0 or flora > 0 or fossil > 0
            do mineral := 0, liquid := 0, flora := 0, fossil := 0;*/

end

svgout id "blue-cell-1" attr "fill" value if RoverBlue.battery < 1 : "lightgray" else "blue" end;
svgout id "blue-cell-2" attr "fill" value if RoverBlue.battery < 2 : "lightgray" else "blue" end;
svgout id "blue-cell-3" attr "fill" value if RoverBlue.battery < 3 : "lightgray" else "blue" end;
svgout id "blue-cell-4" attr "fill" value if RoverBlue.battery < 4 : "lightgray" else "blue" end;
svgout id "blue-cell-5" attr "fill" value if RoverBlue.battery < 5 : "lightgray" else "blue" end;
svgout id "blue-cell-6" attr "fill" value if RoverBlue.battery < 6 : "lightgray" else "blue" end;
svgout id "blue-cell-7" attr "fill" value if RoverBlue.battery < 7 : "lightgray" else "blue" end;
svgout id "blue-cell-8" attr "fill" value if RoverBlue.battery < 8 : "lightgray" else "blue" end;
svgout id "blue_rover" attr "x" value (RoverBlue.positionX - 1) * 100;
svgout id "blue_rover" attr "y" value 300 - ((RoverBlue.positionY - 1) * 100);


controllable event LabBusy;
controllable event LabTransmit;


plant Lab:

    const int positionX = 4;
    const int positionY = 1;
    disc bool busy = false;
    disc bool processed = false;

    location: initial; marked;
        edge RoverBUnload, RoverYUnload do busy := true;
        edge LabBusy when busy = true do processed := true, busy := false;
        edge LabTransmit when busy = false  and processed = true do processed := false;

end
